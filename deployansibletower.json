{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmAnsibleTowerUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for virtual machine that will have ansible tower installed"
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "Enter ssh rsa public key file string data."
      }
    },
    "ansibleTowerAdminPassword": {
      "type": "securestring",
      "minLength": 5,
      "metadata": {
        "description": "Password for ansible tower console admin(min length:5)"
      }
    },
    "ansibleTowerDatabasePassword": {
      "type": "securestring",
      "minLength": 5,
      "metadata": {
        "description": "Password for ansible tower database(min length:5)"
      }
    },
    "remoteAllowedCIDR": {
      "type": "string",
      "minLength": 7,
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "Enter Public IP CIDR to allow for accessing the deployment.Enter in 0.0.0.0/0 format. You can always modify these later in NSG Settings"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://sourcestorage11.blob.core.windows.net/scripts/",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated.Leave blank if unsure"
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "VmSize": "Standard_D2_v2",
    "ansibleNsgName": "tower-nsg",
    "StorageAccountType": "Standard_GRS",
    "diagStorageAccountName": "[concat('dgstorge2',uniqueString(resourceGroup().id))]",
    "ansibleVnetName": "ansible-vnet",
    "ansibleVnetPrefix": "10.0.0.0/16",
    "ansibleVnetTowerSubnetName": "tower-subnet",
    "ansibleVnetTowerSubnetPrefix": "10.0.0.0/24",
    "vmTowerName": "vm-ansible-tower",
    "storageAccountContainerName": "vhds",
    "redHatTags": {
      "type": "object",
      "provider": "9d2c71fc-96ba-4b4a-93b3-14def5bc96fc"
    },
    "quickstartTags": {
      "type": "object",
      "name": "ansible-tower-rhel"
    }
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "linkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), 'ansibletowervm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmAnsibleTowerUsername": {
            "value": "[parameters('vmAnsibleTowerUsername')]"
          },
          "sshKeyData": {
            "value": "[parameters('sshKeyData')]"
          },
          "vmSize": {
            "value": "Standard_DS2_v2"
          },
          "vmTowerName": {
            "value": "[variables('vmTowerName')]"
          },
          "ansibleTowerAdminPassword": {
            "value": "[parameters('ansibleTowerAdminPassword')]"
          },
          "ansibleTowerDatabasePassword": {
            "value": "[parameters('ansibleTowerDatabasePassword')]"
          },
          "remoteAllowedCIDR": {
            "value": "[parameters('remoteAllowedCIDR')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "baseUrl": {
            "value": "[parameters('_artifactsLocation')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('ansibleVnetName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "comments": "This Virtual Network contains all the VMs needed",
      "tags": {
        "displayName": "Ansible-Virtual Network",
        "quickstartName": "[variables('quickstartTags').name]",
        "provider": "[variables('redHatTags').provider]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','linkedTemplate')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('ansibleVnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('ansibleVnetTowerSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('ansibleVnetTowerSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('ansibleNsgName'))]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "ansibleTowerFqdn": {
      "value": "[reference('linkedTemplate').outputs.ansibleTowerFqdn.value]",
      "type": "string"
    }
  }
}